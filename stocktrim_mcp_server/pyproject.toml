[project]
name = "stocktrim-mcp-server"
version = "0.1.0"
description = "Model Context Protocol (MCP) server for StockTrim Inventory Management API"
authors = [
    {name = "Doug Borg", email = "dougborg@dougborg.org"},
]
maintainers = [
    {name = "Doug Borg", email = "dougborg@dougborg.org"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11,<3.14"
keywords = [
  "stocktrim",
  "mcp",
  "model-context-protocol",
  "api-client",
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]
dependencies = [
  "stocktrim-openapi-client",
  "fastmcp>=0.3.0",
  "python-dotenv>=1.0.0",
]

[tool.uv.sources]
stocktrim-openapi-client = { workspace = true }

[project.scripts]
stocktrim-mcp-server = "stocktrim_mcp_server.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/stocktrim_mcp_server"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
dist_path = "dist/"
upload_to_pypi = false
upload_to_repository = false
remove_dist = false
commit_author = "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
commit_message = "chore(release): mcp v{version}"
build_command = "pip install mdformat mdformat-gfm mdformat-tables mdformat-toc && mdformat CHANGELOG.md --wrap 88"
major_on_zero = false
allow_zero_version = true
tag_format = "mcp-v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build",
  "chore",
  "ci",
  "docs",
  "feat",
  "fix",
  "perf",
  "style",
  "refactor",
  "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
# Note: The workflow runs semantic-release when there are (mcp) scoped commits OR when the client is released.
# Semantic-release itself processes all commits in the range, but default_bump_level = 0 means
# commits without feat/fix/perf tags won't trigger version bumps.
default_bump_level = 0
