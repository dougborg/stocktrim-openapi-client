name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions: {}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run full CI pipeline
        run: uv run poe ci

  release:
    needs: test
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: -vv

      - name: Build client package
        if: steps.release.outputs.released == 'true'
        run: uv build

      - name: Build MCP server package
        if: steps.release.outputs.released == 'true'
        run: uv build --package stocktrim-mcp-server

      - name: Upload client artifacts
        if: steps.release.outputs.released == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dist-client
          path: dist/

      - name: Upload MCP server artifacts
        if: steps.release.outputs.released == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dist-mcp
          path: stocktrim_mcp_server/dist/

  publish-client:
    name: Publish Client to PyPI
    needs: release
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-latest
    environment:
      name: PyPI Release
      url: https://pypi.org/p/stocktrim-openapi-client
    permissions:
      id-token: write
    steps:
      - name: Download client artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-client
          path: dist/

      - name: Publish client to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true

  publish-mcp:
    name: Publish MCP Server to PyPI
    needs: release
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-latest
    environment:
      name: PyPI Release MCP
      url: https://pypi.org/p/stocktrim-mcp-server
    permissions:
      id-token: write
    steps:
      - name: Download MCP server artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-mcp
          path: dist/

      - name: Publish MCP server to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true
